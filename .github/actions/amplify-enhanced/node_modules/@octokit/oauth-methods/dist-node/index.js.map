{"version":3,"file":"index.js","sources":["../dist-src/version.js","../dist-src/utils.js","../dist-src/get-web-flow-authorization-url.js","../dist-src/exchange-web-flow-code.js","../dist-src/create-device-code.js","../dist-src/exchange-device-code.js","../dist-src/check-token.js","../dist-src/refresh-token.js","../dist-src/scope-token.js","../dist-src/reset-token.js","../dist-src/delete-token.js","../dist-src/delete-authorization.js"],"sourcesContent":["export const VERSION = \"2.0.3\";\n","import { RequestError } from \"@octokit/request-error\";\nexport function requestToOAuthBaseUrl(request) {\n    const endpointDefaults = request.endpoint.DEFAULTS;\n    return /^https:\\/\\/(api\\.)?github\\.com$/.test(endpointDefaults.baseUrl)\n        ? \"https://github.com\"\n        : endpointDefaults.baseUrl.replace(\"/api/v3\", \"\");\n}\nexport async function oauthRequest(request, route, parameters) {\n    const withOAuthParameters = {\n        baseUrl: requestToOAuthBaseUrl(request),\n        headers: {\n            accept: \"application/json\",\n        },\n        ...parameters,\n    };\n    const response = await request(route, withOAuthParameters);\n    if (\"error\" in response.data) {\n        const error = new RequestError(`${response.data.error_description} (${response.data.error}, ${response.data.error_uri})`, 400, {\n            request: request.endpoint.merge(route, withOAuthParameters),\n            headers: response.headers,\n        });\n        // @ts-ignore add custom response property until https://github.com/octokit/request-error.js/issues/169 is resolved\n        error.response = response;\n        throw error;\n    }\n    return response;\n}\n","import { oauthAuthorizationUrl, } from \"@octokit/oauth-authorization-url\";\nimport { request as defaultRequest } from \"@octokit/request\";\nimport { requestToOAuthBaseUrl } from \"./utils\";\nexport function getWebFlowAuthorizationUrl({ request = defaultRequest, ...options }) {\n    const baseUrl = requestToOAuthBaseUrl(request);\n    // @ts-expect-error TypeScript wants `clientType` to be set explicitly ¯\\_(ツ)_/¯\n    return oauthAuthorizationUrl({\n        ...options,\n        baseUrl,\n    });\n}\n","import { request as defaultRequest } from \"@octokit/request\";\nimport { oauthRequest } from \"./utils\";\nexport async function exchangeWebFlowCode(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const response = await oauthRequest(request, \"POST /login/oauth/access_token\", {\n        client_id: options.clientId,\n        client_secret: options.clientSecret,\n        code: options.code,\n        redirect_uri: options.redirectUrl,\n    });\n    const authentication = {\n        clientType: options.clientType,\n        clientId: options.clientId,\n        clientSecret: options.clientSecret,\n        token: response.data.access_token,\n        scopes: response.data.scope.split(/\\s+/).filter(Boolean),\n    };\n    if (options.clientType === \"github-app\") {\n        if (\"refresh_token\" in response.data) {\n            const apiTimeInMs = new Date(response.headers.date).getTime();\n            (authentication.refreshToken = response.data.refresh_token),\n                (authentication.expiresAt = toTimestamp(apiTimeInMs, response.data.expires_in)),\n                (authentication.refreshTokenExpiresAt = toTimestamp(apiTimeInMs, response.data.refresh_token_expires_in));\n        }\n        delete authentication.scopes;\n    }\n    return { ...response, authentication };\n}\nfunction toTimestamp(apiTimeInMs, expirationInSeconds) {\n    return new Date(apiTimeInMs + expirationInSeconds * 1000).toISOString();\n}\n","import { request as defaultRequest } from \"@octokit/request\";\nimport { oauthRequest } from \"./utils\";\nexport async function createDeviceCode(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const parameters = {\n        client_id: options.clientId,\n    };\n    if (\"scopes\" in options && Array.isArray(options.scopes)) {\n        parameters.scope = options.scopes.join(\" \");\n    }\n    return oauthRequest(request, \"POST /login/device/code\", parameters);\n}\n","import { request as defaultRequest } from \"@octokit/request\";\nimport { oauthRequest } from \"./utils\";\nexport async function exchangeDeviceCode(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const response = await oauthRequest(request, \"POST /login/oauth/access_token\", {\n        client_id: options.clientId,\n        device_code: options.code,\n        grant_type: \"urn:ietf:params:oauth:grant-type:device_code\",\n    });\n    const authentication = {\n        clientType: options.clientType,\n        clientId: options.clientId,\n        token: response.data.access_token,\n        scopes: response.data.scope.split(/\\s+/).filter(Boolean),\n    };\n    if (\"clientSecret\" in options) {\n        authentication.clientSecret = options.clientSecret;\n    }\n    if (options.clientType === \"github-app\") {\n        if (\"refresh_token\" in response.data) {\n            const apiTimeInMs = new Date(response.headers.date).getTime();\n            (authentication.refreshToken = response.data.refresh_token),\n                (authentication.expiresAt = toTimestamp(apiTimeInMs, response.data.expires_in)),\n                (authentication.refreshTokenExpiresAt = toTimestamp(apiTimeInMs, response.data.refresh_token_expires_in));\n        }\n        delete authentication.scopes;\n    }\n    return { ...response, authentication };\n}\nfunction toTimestamp(apiTimeInMs, expirationInSeconds) {\n    return new Date(apiTimeInMs + expirationInSeconds * 1000).toISOString();\n}\n","import { request as defaultRequest } from \"@octokit/request\";\nimport btoa from \"btoa-lite\";\nexport async function checkToken(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    // @ts-expect-error - TODO: I don't get why TS is complaining here. It works with `defaultRequest` directly\n    const response = await request(\"POST /applications/{client_id}/token\", {\n        headers: {\n            authorization: `basic ${btoa(`${options.clientId}:${options.clientSecret}`)}`,\n        },\n        client_id: options.clientId,\n        access_token: options.token,\n    });\n    const authentication = {\n        clientType: options.clientType,\n        clientId: options.clientId,\n        clientSecret: options.clientSecret,\n        token: options.token,\n        scopes: response.data.scopes,\n    };\n    if (response.data.expires_at)\n        authentication.expiresAt = response.data.expires_at;\n    if (options.clientType === \"github-app\") {\n        delete authentication.scopes;\n    }\n    return { ...response, authentication };\n}\n","import { request as defaultRequest } from \"@octokit/request\";\nimport { oauthRequest } from \"./utils\";\nexport async function refreshToken(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const response = await oauthRequest(request, \"POST /login/oauth/access_token\", {\n        client_id: options.clientId,\n        client_secret: options.clientSecret,\n        grant_type: \"refresh_token\",\n        refresh_token: options.refreshToken,\n    });\n    const apiTimeInMs = new Date(response.headers.date).getTime();\n    const authentication = {\n        clientType: \"github-app\",\n        clientId: options.clientId,\n        clientSecret: options.clientSecret,\n        token: response.data.access_token,\n        refreshToken: response.data.refresh_token,\n        expiresAt: toTimestamp(apiTimeInMs, response.data.expires_in),\n        refreshTokenExpiresAt: toTimestamp(apiTimeInMs, response.data.refresh_token_expires_in),\n    };\n    return { ...response, authentication };\n}\nfunction toTimestamp(apiTimeInMs, expirationInSeconds) {\n    return new Date(apiTimeInMs + expirationInSeconds * 1000).toISOString();\n}\n","import { request as defaultRequest } from \"@octokit/request\";\nimport btoa from \"btoa-lite\";\nexport async function scopeToken(options) {\n    const { request: optionsRequest, clientType, clientId, clientSecret, token, ...requestOptions } = options;\n    const request = optionsRequest ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const response = await request(\"POST /applications/{client_id}/token/scoped\", \n    // @ts-expect-error - TODO: I don't get why TS is complaining here. It works with `defaultRequest` directly\n    {\n        headers: {\n            authorization: `basic ${btoa(`${clientId}:${clientSecret}`)}`,\n        },\n        client_id: clientId,\n        access_token: token,\n        ...requestOptions,\n    });\n    const authentication = Object.assign({\n        clientType,\n        clientId,\n        clientSecret,\n        token: response.data.token,\n    }, response.data.expires_at ? { expiresAt: response.data.expires_at } : {});\n    // @ts-expect-error - response.status type is incompatible (200 vs number)\n    return { ...response, authentication };\n}\n","import { request as defaultRequest } from \"@octokit/request\";\nimport btoa from \"btoa-lite\";\nexport async function resetToken(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const auth = btoa(`${options.clientId}:${options.clientSecret}`);\n    const response = await request(\"PATCH /applications/{client_id}/token\", \n    // @ts-expect-error - TODO: I don't get why TS is complaining here. It works with `defaultRequest` directly\n    {\n        headers: {\n            authorization: `basic ${auth}`,\n        },\n        client_id: options.clientId,\n        access_token: options.token,\n    });\n    const authentication = {\n        clientType: options.clientType,\n        clientId: options.clientId,\n        clientSecret: options.clientSecret,\n        token: response.data.token,\n        scopes: response.data.scopes,\n    };\n    if (response.data.expires_at)\n        authentication.expiresAt = response.data.expires_at;\n    if (options.clientType === \"github-app\") {\n        delete authentication.scopes;\n    }\n    return { ...response, authentication };\n}\n","import { request as defaultRequest } from \"@octokit/request\";\nimport btoa from \"btoa-lite\";\nexport async function deleteToken(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const auth = btoa(`${options.clientId}:${options.clientSecret}`);\n    return request(\"DELETE /applications/{client_id}/token\", \n    // @ts-expect-error - TODO: I don't get why TS is complaining here. It works with `defaultRequest` directly\n    {\n        headers: {\n            authorization: `basic ${auth}`,\n        },\n        client_id: options.clientId,\n        access_token: options.token,\n    });\n}\n","import { request as defaultRequest } from \"@octokit/request\";\nimport btoa from \"btoa-lite\";\nexport async function deleteAuthorization(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const auth = btoa(`${options.clientId}:${options.clientSecret}`);\n    return request(\"DELETE /applications/{client_id}/grant\", \n    // @ts-expect-error - TODO: I don't get why TS is complaining here. It works with `defaultRequest` directly\n    {\n        headers: {\n            authorization: `basic ${auth}`,\n        },\n        client_id: options.clientId,\n        access_token: options.token,\n    });\n}\n"],"names":["VERSION","requestToOAuthBaseUrl","request","endpointDefaults","endpoint","DEFAULTS","test","baseUrl","replace","oauthRequest","route","parameters","withOAuthParameters","headers","accept","response","data","error","RequestError","error_description","error_uri","merge","getWebFlowAuthorizationUrl","defaultRequest","options","oauthAuthorizationUrl","exchangeWebFlowCode","client_id","clientId","client_secret","clientSecret","code","redirect_uri","redirectUrl","authentication","clientType","token","access_token","scopes","scope","split","filter","Boolean","apiTimeInMs","Date","date","getTime","refreshToken","refresh_token","expiresAt","toTimestamp","expires_in","refreshTokenExpiresAt","refresh_token_expires_in","expirationInSeconds","toISOString","createDeviceCode","Array","isArray","join","exchangeDeviceCode","device_code","grant_type","checkToken","authorization","btoa","expires_at","scopeToken","optionsRequest","requestOptions","Object","assign","resetToken","auth","deleteToken","deleteAuthorization"],"mappings":";;;;;;;;;;;MAAaA,OAAO,GAAG;;ACChB,SAASC,qBAAT,CAA+BC,OAA/B,EAAwC;EAC3C,MAAMC,gBAAgB,GAAGD,OAAO,CAACE,QAAR,CAAiBC,QAA1C;EACA,OAAO,kCAAkCC,IAAlC,CAAuCH,gBAAgB,CAACI,OAAxD,IACD,oBADC,GAEDJ,gBAAgB,CAACI,OAAjB,CAAyBC,OAAzB,CAAiC,SAAjC,EAA4C,EAA5C,CAFN;AAGH;AACD,AAAO,eAAeC,YAAf,CAA4BP,OAA5B,EAAqCQ,KAArC,EAA4CC,UAA5C,EAAwD;EAC3D,MAAMC,mBAAmB,GAAG;IACxBL,OAAO,EAAEN,qBAAqB,CAACC,OAAD,CADN;IAExBW,OAAO,EAAE;MACLC,MAAM,EAAE;KAHY;IAKxB,GAAGH;GALP;EAOA,MAAMI,QAAQ,GAAG,MAAMb,OAAO,CAACQ,KAAD,EAAQE,mBAAR,CAA9B;;EACA,IAAI,WAAWG,QAAQ,CAACC,IAAxB,EAA8B;IAC1B,MAAMC,KAAK,GAAG,IAAIC,yBAAJ,CAAkB,GAAEH,QAAQ,CAACC,IAAT,CAAcG,iBAAkB,KAAIJ,QAAQ,CAACC,IAAT,CAAcC,KAAM,KAAIF,QAAQ,CAACC,IAAT,CAAcI,SAAU,GAAxG,EAA4G,GAA5G,EAAiH;MAC3HlB,OAAO,EAAEA,OAAO,CAACE,QAAR,CAAiBiB,KAAjB,CAAuBX,KAAvB,EAA8BE,mBAA9B,CADkH;MAE3HC,OAAO,EAAEE,QAAQ,CAACF;KAFR,CAAd,CAD0B;;IAM1BI,KAAK,CAACF,QAAN,GAAiBA,QAAjB;IACA,MAAME,KAAN;;;EAEJ,OAAOF,QAAP;AACH;;ACvBM,SAASO,0BAAT,CAAoC;WAAEpB,SAAO,GAAGqB,eAAZ;EAA4B,GAAGC;AAA/B,CAApC,EAA8E;EACjF,MAAMjB,OAAO,GAAGN,qBAAqB,CAACC,SAAD,CAArC,CADiF;;EAGjF,OAAOuB,2CAAqB,CAAC,EACzB,GAAGD,OADsB;IAEzBjB;GAFwB,CAA5B;AAIH;;ACRM,eAAemB,mBAAf,CAAmCF,OAAnC,EAA4C;EAC/C,MAAMtB,SAAO,GAAGsB,OAAO,CAACtB,OAAR;;EAEZqB,eAFJ;EAGA,MAAMR,QAAQ,GAAG,MAAMN,YAAY,CAACP,SAAD,EAAU,gCAAV,EAA4C;IAC3EyB,SAAS,EAAEH,OAAO,CAACI,QADwD;IAE3EC,aAAa,EAAEL,OAAO,CAACM,YAFoD;IAG3EC,IAAI,EAAEP,OAAO,CAACO,IAH6D;IAI3EC,YAAY,EAAER,OAAO,CAACS;GAJS,CAAnC;EAMA,MAAMC,cAAc,GAAG;IACnBC,UAAU,EAAEX,OAAO,CAACW,UADD;IAEnBP,QAAQ,EAAEJ,OAAO,CAACI,QAFC;IAGnBE,YAAY,EAAEN,OAAO,CAACM,YAHH;IAInBM,KAAK,EAAErB,QAAQ,CAACC,IAAT,CAAcqB,YAJF;IAKnBC,MAAM,EAAEvB,QAAQ,CAACC,IAAT,CAAcuB,KAAd,CAAoBC,KAApB,CAA0B,KAA1B,EAAiCC,MAAjC,CAAwCC,OAAxC;GALZ;;EAOA,IAAIlB,OAAO,CAACW,UAAR,KAAuB,YAA3B,EAAyC;IACrC,IAAI,mBAAmBpB,QAAQ,CAACC,IAAhC,EAAsC;MAClC,MAAM2B,WAAW,GAAG,IAAIC,IAAJ,CAAS7B,QAAQ,CAACF,OAAT,CAAiBgC,IAA1B,EAAgCC,OAAhC,EAApB;MACCZ,cAAc,CAACa,YAAf,GAA8BhC,QAAQ,CAACC,IAAT,CAAcgC,aAA7C,EACKd,cAAc,CAACe,SAAf,GAA2BC,WAAW,CAACP,WAAD,EAAc5B,QAAQ,CAACC,IAAT,CAAcmC,UAA5B,CAD3C,EAEKjB,cAAc,CAACkB,qBAAf,GAAuCF,WAAW,CAACP,WAAD,EAAc5B,QAAQ,CAACC,IAAT,CAAcqC,wBAA5B,CAFvD;;;IAIJ,OAAOnB,cAAc,CAACI,MAAtB;;;EAEJ,OAAO,EAAE,GAAGvB,QAAL;IAAemB;GAAtB;AACH;;AACD,SAASgB,WAAT,CAAqBP,WAArB,EAAkCW,mBAAlC,EAAuD;EACnD,OAAO,IAAIV,IAAJ,CAASD,WAAW,GAAGW,mBAAmB,GAAG,IAA7C,EAAmDC,WAAnD,EAAP;AACH;;AC9BM,eAAeC,gBAAf,CAAgChC,OAAhC,EAAyC;EAC5C,MAAMtB,SAAO,GAAGsB,OAAO,CAACtB,OAAR;;EAEZqB,eAFJ;EAGA,MAAMZ,UAAU,GAAG;IACfgB,SAAS,EAAEH,OAAO,CAACI;GADvB;;EAGA,IAAI,YAAYJ,OAAZ,IAAuBiC,KAAK,CAACC,OAAN,CAAclC,OAAO,CAACc,MAAtB,CAA3B,EAA0D;IACtD3B,UAAU,CAAC4B,KAAX,GAAmBf,OAAO,CAACc,MAAR,CAAeqB,IAAf,CAAoB,GAApB,CAAnB;;;EAEJ,OAAOlD,YAAY,CAACP,SAAD,EAAU,yBAAV,EAAqCS,UAArC,CAAnB;AACH;;ACXM,eAAeiD,kBAAf,CAAkCpC,OAAlC,EAA2C;EAC9C,MAAMtB,SAAO,GAAGsB,OAAO,CAACtB,OAAR;;EAEZqB,eAFJ;EAGA,MAAMR,QAAQ,GAAG,MAAMN,YAAY,CAACP,SAAD,EAAU,gCAAV,EAA4C;IAC3EyB,SAAS,EAAEH,OAAO,CAACI,QADwD;IAE3EiC,WAAW,EAAErC,OAAO,CAACO,IAFsD;IAG3E+B,UAAU,EAAE;GAHmB,CAAnC;EAKA,MAAM5B,cAAc,GAAG;IACnBC,UAAU,EAAEX,OAAO,CAACW,UADD;IAEnBP,QAAQ,EAAEJ,OAAO,CAACI,QAFC;IAGnBQ,KAAK,EAAErB,QAAQ,CAACC,IAAT,CAAcqB,YAHF;IAInBC,MAAM,EAAEvB,QAAQ,CAACC,IAAT,CAAcuB,KAAd,CAAoBC,KAApB,CAA0B,KAA1B,EAAiCC,MAAjC,CAAwCC,OAAxC;GAJZ;;EAMA,IAAI,kBAAkBlB,OAAtB,EAA+B;IAC3BU,cAAc,CAACJ,YAAf,GAA8BN,OAAO,CAACM,YAAtC;;;EAEJ,IAAIN,OAAO,CAACW,UAAR,KAAuB,YAA3B,EAAyC;IACrC,IAAI,mBAAmBpB,QAAQ,CAACC,IAAhC,EAAsC;MAClC,MAAM2B,WAAW,GAAG,IAAIC,IAAJ,CAAS7B,QAAQ,CAACF,OAAT,CAAiBgC,IAA1B,EAAgCC,OAAhC,EAApB;MACCZ,cAAc,CAACa,YAAf,GAA8BhC,QAAQ,CAACC,IAAT,CAAcgC,aAA7C,EACKd,cAAc,CAACe,SAAf,GAA2BC,aAAW,CAACP,WAAD,EAAc5B,QAAQ,CAACC,IAAT,CAAcmC,UAA5B,CAD3C,EAEKjB,cAAc,CAACkB,qBAAf,GAAuCF,aAAW,CAACP,WAAD,EAAc5B,QAAQ,CAACC,IAAT,CAAcqC,wBAA5B,CAFvD;;;IAIJ,OAAOnB,cAAc,CAACI,MAAtB;;;EAEJ,OAAO,EAAE,GAAGvB,QAAL;IAAemB;GAAtB;AACH;;AACD,SAASgB,aAAT,CAAqBP,WAArB,EAAkCW,mBAAlC,EAAuD;EACnD,OAAO,IAAIV,IAAJ,CAASD,WAAW,GAAGW,mBAAmB,GAAG,IAA7C,EAAmDC,WAAnD,EAAP;AACH;;AC/BM,eAAeQ,UAAf,CAA0BvC,OAA1B,EAAmC;EACtC,MAAMtB,SAAO,GAAGsB,OAAO,CAACtB,OAAR;;EAEZqB,eAFJ,CADsC;;EAKtC,MAAMR,QAAQ,GAAG,MAAMb,SAAO,CAAC,sCAAD,EAAyC;IACnEW,OAAO,EAAE;MACLmD,aAAa,EAAG,SAAQC,IAAI,CAAE,GAAEzC,OAAO,CAACI,QAAS,IAAGJ,OAAO,CAACM,YAAa,EAA7C,CAAgD;KAFb;IAInEH,SAAS,EAAEH,OAAO,CAACI,QAJgD;IAKnES,YAAY,EAAEb,OAAO,CAACY;GALI,CAA9B;EAOA,MAAMF,cAAc,GAAG;IACnBC,UAAU,EAAEX,OAAO,CAACW,UADD;IAEnBP,QAAQ,EAAEJ,OAAO,CAACI,QAFC;IAGnBE,YAAY,EAAEN,OAAO,CAACM,YAHH;IAInBM,KAAK,EAAEZ,OAAO,CAACY,KAJI;IAKnBE,MAAM,EAAEvB,QAAQ,CAACC,IAAT,CAAcsB;GAL1B;EAOA,IAAIvB,QAAQ,CAACC,IAAT,CAAckD,UAAlB,EACIhC,cAAc,CAACe,SAAf,GAA2BlC,QAAQ,CAACC,IAAT,CAAckD,UAAzC;;EACJ,IAAI1C,OAAO,CAACW,UAAR,KAAuB,YAA3B,EAAyC;IACrC,OAAOD,cAAc,CAACI,MAAtB;;;EAEJ,OAAO,EAAE,GAAGvB,QAAL;IAAemB;GAAtB;AACH;;ACzBM,eAAea,YAAf,CAA4BvB,OAA5B,EAAqC;EACxC,MAAMtB,SAAO,GAAGsB,OAAO,CAACtB,OAAR;;EAEZqB,eAFJ;EAGA,MAAMR,QAAQ,GAAG,MAAMN,YAAY,CAACP,SAAD,EAAU,gCAAV,EAA4C;IAC3EyB,SAAS,EAAEH,OAAO,CAACI,QADwD;IAE3EC,aAAa,EAAEL,OAAO,CAACM,YAFoD;IAG3EgC,UAAU,EAAE,eAH+D;IAI3Ed,aAAa,EAAExB,OAAO,CAACuB;GAJQ,CAAnC;EAMA,MAAMJ,WAAW,GAAG,IAAIC,IAAJ,CAAS7B,QAAQ,CAACF,OAAT,CAAiBgC,IAA1B,EAAgCC,OAAhC,EAApB;EACA,MAAMZ,cAAc,GAAG;IACnBC,UAAU,EAAE,YADO;IAEnBP,QAAQ,EAAEJ,OAAO,CAACI,QAFC;IAGnBE,YAAY,EAAEN,OAAO,CAACM,YAHH;IAInBM,KAAK,EAAErB,QAAQ,CAACC,IAAT,CAAcqB,YAJF;IAKnBU,YAAY,EAAEhC,QAAQ,CAACC,IAAT,CAAcgC,aALT;IAMnBC,SAAS,EAAEC,aAAW,CAACP,WAAD,EAAc5B,QAAQ,CAACC,IAAT,CAAcmC,UAA5B,CANH;IAOnBC,qBAAqB,EAAEF,aAAW,CAACP,WAAD,EAAc5B,QAAQ,CAACC,IAAT,CAAcqC,wBAA5B;GAPtC;EASA,OAAO,EAAE,GAAGtC,QAAL;IAAemB;GAAtB;AACH;;AACD,SAASgB,aAAT,CAAqBP,WAArB,EAAkCW,mBAAlC,EAAuD;EACnD,OAAO,IAAIV,IAAJ,CAASD,WAAW,GAAGW,mBAAmB,GAAG,IAA7C,EAAmDC,WAAnD,EAAP;AACH;;ACxBM,eAAeY,UAAf,CAA0B3C,OAA1B,EAAmC;EACtC,MAAM;IAAEtB,OAAO,EAAEkE,cAAX;IAA2BjC,UAA3B;IAAuCP,QAAvC;IAAiDE,YAAjD;IAA+DM,KAA/D;IAAsE,GAAGiC;MAAmB7C,OAAlG;EACA,MAAMtB,SAAO,GAAGkE,cAAc;;EAE1B7C,eAFJ;EAGA,MAAMR,QAAQ,GAAG,MAAMb,SAAO,CAAC,6CAAD;EAE9B;IACIW,OAAO,EAAE;MACLmD,aAAa,EAAG,SAAQC,IAAI,CAAE,GAAErC,QAAS,IAAGE,YAAa,EAA7B,CAAgC;KAFpE;IAIIH,SAAS,EAAEC,QAJf;IAKIS,YAAY,EAAED,KALlB;IAMI,GAAGiC;GARuB,CAA9B;EAUA,MAAMnC,cAAc,GAAGoC,MAAM,CAACC,MAAP,CAAc;IACjCpC,UADiC;IAEjCP,QAFiC;IAGjCE,YAHiC;IAIjCM,KAAK,EAAErB,QAAQ,CAACC,IAAT,CAAcoB;GAJF,EAKpBrB,QAAQ,CAACC,IAAT,CAAckD,UAAd,GAA2B;IAAEjB,SAAS,EAAElC,QAAQ,CAACC,IAAT,CAAckD;GAAtD,GAAqE,EALjD,CAAvB,CAfsC;;EAsBtC,OAAO,EAAE,GAAGnD,QAAL;IAAemB;GAAtB;AACH;;ACvBM,eAAesC,UAAf,CAA0BhD,OAA1B,EAAmC;EACtC,MAAMtB,SAAO,GAAGsB,OAAO,CAACtB,OAAR;;EAEZqB,eAFJ;EAGA,MAAMkD,IAAI,GAAGR,IAAI,CAAE,GAAEzC,OAAO,CAACI,QAAS,IAAGJ,OAAO,CAACM,YAAa,EAA7C,CAAjB;EACA,MAAMf,QAAQ,GAAG,MAAMb,SAAO,CAAC,uCAAD;EAE9B;IACIW,OAAO,EAAE;MACLmD,aAAa,EAAG,SAAQS,IAAK;KAFrC;IAII9C,SAAS,EAAEH,OAAO,CAACI,QAJvB;IAKIS,YAAY,EAAEb,OAAO,CAACY;GAPI,CAA9B;EASA,MAAMF,cAAc,GAAG;IACnBC,UAAU,EAAEX,OAAO,CAACW,UADD;IAEnBP,QAAQ,EAAEJ,OAAO,CAACI,QAFC;IAGnBE,YAAY,EAAEN,OAAO,CAACM,YAHH;IAInBM,KAAK,EAAErB,QAAQ,CAACC,IAAT,CAAcoB,KAJF;IAKnBE,MAAM,EAAEvB,QAAQ,CAACC,IAAT,CAAcsB;GAL1B;EAOA,IAAIvB,QAAQ,CAACC,IAAT,CAAckD,UAAlB,EACIhC,cAAc,CAACe,SAAf,GAA2BlC,QAAQ,CAACC,IAAT,CAAckD,UAAzC;;EACJ,IAAI1C,OAAO,CAACW,UAAR,KAAuB,YAA3B,EAAyC;IACrC,OAAOD,cAAc,CAACI,MAAtB;;;EAEJ,OAAO,EAAE,GAAGvB,QAAL;IAAemB;GAAtB;AACH;;AC3BM,eAAewC,WAAf,CAA2BlD,OAA3B,EAAoC;EACvC,MAAMtB,SAAO,GAAGsB,OAAO,CAACtB,OAAR;;EAEZqB,eAFJ;EAGA,MAAMkD,IAAI,GAAGR,IAAI,CAAE,GAAEzC,OAAO,CAACI,QAAS,IAAGJ,OAAO,CAACM,YAAa,EAA7C,CAAjB;EACA,OAAO5B,SAAO,CAAC,wCAAD;EAEd;IACIW,OAAO,EAAE;MACLmD,aAAa,EAAG,SAAQS,IAAK;KAFrC;IAII9C,SAAS,EAAEH,OAAO,CAACI,QAJvB;IAKIS,YAAY,EAAEb,OAAO,CAACY;GAPZ,CAAd;AASH;;ACdM,eAAeuC,mBAAf,CAAmCnD,OAAnC,EAA4C;EAC/C,MAAMtB,SAAO,GAAGsB,OAAO,CAACtB,OAAR;;EAEZqB,eAFJ;EAGA,MAAMkD,IAAI,GAAGR,IAAI,CAAE,GAAEzC,OAAO,CAACI,QAAS,IAAGJ,OAAO,CAACM,YAAa,EAA7C,CAAjB;EACA,OAAO5B,SAAO,CAAC,wCAAD;EAEd;IACIW,OAAO,EAAE;MACLmD,aAAa,EAAG,SAAQS,IAAK;KAFrC;IAII9C,SAAS,EAAEH,OAAO,CAACI,QAJvB;IAKIS,YAAY,EAAEb,OAAO,CAACY;GAPZ,CAAd;AASH;;;;;;;;;;;;;;"}