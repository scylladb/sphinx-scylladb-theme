{"version":3,"file":"index.js","sources":["../dist-src/get-oauth-access-token.js","../dist-src/auth.js","../dist-src/hook.js","../dist-src/version.js","../dist-src/index.js"],"sourcesContent":["import { createDeviceCode, exchangeDeviceCode } from \"@octokit/oauth-methods\";\nexport async function getOAuthAccessToken(state, options) {\n    const cachedAuthentication = getCachedAuthentication(state, options.auth);\n    if (cachedAuthentication)\n        return cachedAuthentication;\n    // Step 1: Request device and user codes\n    // https://docs.github.com/en/developers/apps/authorizing-oauth-apps#step-1-app-requests-the-device-and-user-verification-codes-from-github\n    const { data: verification } = await createDeviceCode({\n        clientType: state.clientType,\n        clientId: state.clientId,\n        request: options.request || state.request,\n        // @ts-expect-error the extra code to make TS happy is not worth it\n        scopes: options.auth.scopes || state.scopes,\n    });\n    // Step 2: User must enter the user code on https://github.com/login/device\n    // See https://docs.github.com/en/developers/apps/authorizing-oauth-apps#step-2-prompt-the-user-to-enter-the-user-code-in-a-browser\n    await state.onVerification(verification);\n    // Step 3: Exchange device code for access token\n    // See https://docs.github.com/en/developers/apps/authorizing-oauth-apps#step-3-app-polls-github-to-check-if-the-user-authorized-the-device\n    const authentication = await waitForAccessToken(options.request || state.request, state.clientId, state.clientType, verification);\n    state.authentication = authentication;\n    return authentication;\n}\nfunction getCachedAuthentication(state, auth) {\n    if (auth.refresh === true)\n        return false;\n    if (!state.authentication)\n        return false;\n    if (state.clientType === \"github-app\") {\n        return state.authentication;\n    }\n    const authentication = state.authentication;\n    const newScope = ((\"scopes\" in auth && auth.scopes) || state.scopes).join(\" \");\n    const currentScope = authentication.scopes.join(\" \");\n    return newScope === currentScope ? authentication : false;\n}\nasync function wait(seconds) {\n    await new Promise((resolve) => setTimeout(resolve, seconds * 1000));\n}\nasync function waitForAccessToken(request, clientId, clientType, verification) {\n    try {\n        const options = {\n            clientId,\n            request,\n            code: verification.device_code,\n        };\n        // WHY TYPESCRIPT WHY ARE YOU DOING THIS TO ME\n        const { authentication } = clientType === \"oauth-app\"\n            ? await exchangeDeviceCode({\n                ...options,\n                clientType: \"oauth-app\",\n            })\n            : await exchangeDeviceCode({\n                ...options,\n                clientType: \"github-app\",\n            });\n        return {\n            type: \"token\",\n            tokenType: \"oauth\",\n            ...authentication,\n        };\n    }\n    catch (error) {\n        // istanbul ignore if\n        // @ts-ignore\n        if (!error.response)\n            throw error;\n        // @ts-ignore\n        const errorType = error.response.data.error;\n        if (errorType === \"authorization_pending\") {\n            await wait(verification.interval);\n            return waitForAccessToken(request, clientId, clientType, verification);\n        }\n        if (errorType === \"slow_down\") {\n            await wait(verification.interval + 5);\n            return waitForAccessToken(request, clientId, clientType, verification);\n        }\n        throw error;\n    }\n}\n","import { getOAuthAccessToken } from \"./get-oauth-access-token\";\nexport async function auth(state, authOptions) {\n    return getOAuthAccessToken(state, {\n        auth: authOptions,\n    });\n}\n","import { getOAuthAccessToken } from \"./get-oauth-access-token\";\nexport async function hook(state, request, route, parameters) {\n    let endpoint = request.endpoint.merge(route, parameters);\n    // Do not intercept request to retrieve codes or token\n    if (/\\/login\\/(oauth\\/access_token|device\\/code)$/.test(endpoint.url)) {\n        return request(endpoint);\n    }\n    const { token } = await getOAuthAccessToken(state, {\n        request,\n        auth: { type: \"oauth\" },\n    });\n    endpoint.headers.authorization = `token ${token}`;\n    return request(endpoint);\n}\n","export const VERSION = \"4.0.2\";\n","import { getUserAgent } from \"universal-user-agent\";\nimport { request as octokitRequest } from \"@octokit/request\";\nimport { auth } from \"./auth\";\nimport { hook } from \"./hook\";\nimport { VERSION } from \"./version\";\nexport function createOAuthDeviceAuth(options) {\n    const requestWithDefaults = options.request ||\n        octokitRequest.defaults({\n            headers: {\n                \"user-agent\": `octokit-auth-oauth-device.js/${VERSION} ${getUserAgent()}`,\n            },\n        });\n    const { request = requestWithDefaults, ...otherOptions } = options;\n    const state = options.clientType === \"github-app\"\n        ? {\n            ...otherOptions,\n            clientType: \"github-app\",\n            request,\n        }\n        : {\n            ...otherOptions,\n            clientType: \"oauth-app\",\n            request,\n            scopes: options.scopes || [],\n        };\n    if (!options.clientId) {\n        throw new Error('[@octokit/auth-oauth-device] \"clientId\" option must be set (https://github.com/octokit/auth-oauth-device.js#usage)');\n    }\n    if (!options.onVerification) {\n        throw new Error('[@octokit/auth-oauth-device] \"onVerification\" option must be a function (https://github.com/octokit/auth-oauth-device.js#usage)');\n    }\n    // @ts-ignore too much for tsc / ts-jest ¯\\_(ツ)_/¯\n    return Object.assign(auth.bind(null, state), {\n        hook: hook.bind(null, state),\n    });\n}\n"],"names":["getOAuthAccessToken","state","options","cachedAuthentication","getCachedAuthentication","auth","data","verification","createDeviceCode","clientType","clientId","request","scopes","onVerification","authentication","waitForAccessToken","refresh","newScope","join","currentScope","wait","seconds","Promise","resolve","setTimeout","code","device_code","exchangeDeviceCode","type","tokenType","error","response","errorType","interval","authOptions","hook","route","parameters","endpoint","merge","test","url","token","headers","authorization","VERSION","createOAuthDeviceAuth","requestWithDefaults","octokitRequest","defaults","getUserAgent","otherOptions","Error","Object","assign","bind"],"mappings":"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"}